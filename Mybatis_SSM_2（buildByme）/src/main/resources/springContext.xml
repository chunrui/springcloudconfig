<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/cache https://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/lang https://www.springframework.org/schema/lang/spring-lang.xsd
		http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd">
  <!-- 引入属性文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	<!-- 自动扫描(自动注入) -->
	<context:component-scan base-package="com.*.service" />
	<context:component-scan base-package="com.*.mapper" />
	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">

		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="jdbcUrl" value="${jdbc.url}"></property>
		<property name="driverClass" value="${jdbc.driver}"></property>
		
		 <!-- <property name="initialSize" value="${initialSize}"></property>  
        连接池最大数量  
        <property name="maxActive" value="${maxActive}"></property>  
        连接池最大空闲  
        <property name="maxIdle" value="${maxIdle}"></property>  
        连接池最小空闲  
        <property name="minIdle" value="${minIdle}"></property>  
        获取连接最大等待时间  
        <property name="maxWait" value="${maxWait}"></property>  -->
	</bean>

      <!-- spring和Mybatis完美整合，不需要mybatis的配置映射文件 -->  
       <!-- 配置sqlSessionFactory -->
    <!-- <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" /> 
        <property name="configlation" value="mybatisConfig.xml" /> 
        自动扫描mapper.xml文件  
        <property name="mapperLocations" value="classpath:com/lnsf/mapper/*.xml"></property>  
    </bean>  -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">		
        <property name="dataSource" ref="dataSource" />		
    <!-- 自动扫描mappers.xml文件 -->		
        <property name="mapperLocations" value="classpath:mybatis/*.xml"></property>		
    <!-- mybatis配置文件 -->		
        <property name="configLocation" value="classpath:mybatisConfig.xml"></property>
    </bean>

   <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.lnsf.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

    <!-- 创建sqlSession实例 -->
    
    <bean name="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" 
    destroy-method="close">
		<constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
	</bean>
    

	

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- <tx:advice id="tx" transaction-manager="transactionManager">
	</tx:advice> -->
	<!--配置事务通知 -->
	<tx:advice id="tx"
		transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="new*" propagation="REQUIRED" />
			<tx:method name="set*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="change*" propagation="REQUIRED" />
			<tx:method name="start*" propagation="REQUIRED" />
			<tx:method name="get*" propagation="REQUIRED"
				read-only="true" />
			<tx:method name="find*" propagation="REQUIRED"
				read-only="true" />
			<tx:method name="select*" propagation="REQUIRED"
				read-only="true" />
			<tx:method name="load*" propagation="REQUIRED"
				read-only="true" />
			<tx:method name="*" propagation="REQUIRED" read-only="true" />
		</tx:attributes>
	</tx:advice><!--配置事务切面 -->
	<aop:config>	<!--配置切点 -->
		<aop:pointcut
			expression="execution(* com.lnsf.service.*.*(..))"
			id="serviceOperation" />	
			<!--配置事务通知 -->
		<aop:advisor advice-ref="tx" pointcut-ref="serviceOperation" />
	</aop:config>   
</beans>