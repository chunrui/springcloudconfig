<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.BomMapper" >
  <resultMap id="BaseResultMap" type="po.Bom" >
    <result column="mid" property="mid" jdbcType="VARCHAR" />
    <result column="productmid" property="productmid" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="pnum" property="pnum" jdbcType="DOUBLE" />
    <result column="layer" property="layer" jdbcType="INTEGER" />
    <result column="procno" property="procno" jdbcType="INTEGER" />
    <result column="procname" property="procname" jdbcType="VARCHAR" />
    <result column="place" property="place" jdbcType="VARCHAR" />
    <result column="maketime" property="maketime" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    mid, productmid, type, pnum, layer, procno, procname, place, maketime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="po.BomExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bom
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="po.BomExample" >
    delete from bom
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="po.Bom" >
    insert into bom (mid, productmid, type, 
      pnum, layer, procno, 
      procname, place, maketime
      )
    values (#{mid,jdbcType=VARCHAR}, #{productmid,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{pnum,jdbcType=DOUBLE}, #{layer,jdbcType=INTEGER}, #{procno,jdbcType=INTEGER}, 
      #{procname,jdbcType=VARCHAR}, #{place,jdbcType=VARCHAR}, #{maketime,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="po.Bom" >
    insert into bom
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="mid != null" >
        mid,
      </if>
      <if test="productmid != null" >
        productmid,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="pnum != null" >
        pnum,
      </if>
      <if test="layer != null" >
        layer,
      </if>
      <if test="procno != null" >
        procno,
      </if>
      <if test="procname != null" >
        procname,
      </if>
      <if test="place != null" >
        place,
      </if>
      <if test="maketime != null" >
        maketime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="mid != null" >
        #{mid,jdbcType=VARCHAR},
      </if>
      <if test="productmid != null" >
        #{productmid,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="pnum != null" >
        #{pnum,jdbcType=DOUBLE},
      </if>
      <if test="layer != null" >
        #{layer,jdbcType=INTEGER},
      </if>
      <if test="procno != null" >
        #{procno,jdbcType=INTEGER},
      </if>
      <if test="procname != null" >
        #{procname,jdbcType=VARCHAR},
      </if>
      <if test="place != null" >
        #{place,jdbcType=VARCHAR},
      </if>
      <if test="maketime != null" >
        #{maketime,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="po.BomExample" resultType="java.lang.Integer" >
    select count(*) from bom
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bom
    <set >
      <if test="record.mid != null" >
        mid = #{record.mid,jdbcType=VARCHAR},
      </if>
      <if test="record.productmid != null" >
        productmid = #{record.productmid,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.pnum != null" >
        pnum = #{record.pnum,jdbcType=DOUBLE},
      </if>
      <if test="record.layer != null" >
        layer = #{record.layer,jdbcType=INTEGER},
      </if>
      <if test="record.procno != null" >
        procno = #{record.procno,jdbcType=INTEGER},
      </if>
      <if test="record.procname != null" >
        procname = #{record.procname,jdbcType=VARCHAR},
      </if>
      <if test="record.place != null" >
        place = #{record.place,jdbcType=VARCHAR},
      </if>
      <if test="record.maketime != null" >
        maketime = #{record.maketime,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bom
    set mid = #{record.mid,jdbcType=VARCHAR},
      productmid = #{record.productmid,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      pnum = #{record.pnum,jdbcType=DOUBLE},
      layer = #{record.layer,jdbcType=INTEGER},
      procno = #{record.procno,jdbcType=INTEGER},
      procname = #{record.procname,jdbcType=VARCHAR},
      place = #{record.place,jdbcType=VARCHAR},
      maketime = #{record.maketime,jdbcType=DOUBLE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>